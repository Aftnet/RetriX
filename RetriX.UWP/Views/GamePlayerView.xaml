<views:MvxWindowsPage
    x:Class="RetriX.UWP.Pages.GamePlayerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:views="using:MvvmCross.Uwp.Views"
    xmlns:controls="using:RetriX.UWP.Controls"
    xmlns:triggers="using:WindowsStateTriggers"
    RequestedTheme="Dark"
    mc:Ignorable="d">

    <views:MvxWindowsPage.Resources>
        <Style x:Key="LeftVirtualPadStyle" TargetType="controls:VirtualPad">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="UpButtonInputType" Value="DeviceIdJoypadUp"/>
            <Setter Property="DownButtonInputType" Value="DeviceIdJoypadDown"/>
            <Setter Property="LeftButtonInputType" Value="DeviceIdJoypadLeft"/>
            <Setter Property="RightButtonInputType" Value="DeviceIdJoypadRight"/>
            <Setter Property="CenterButtonInputType" Value="DeviceIdJoypadSelect"/>
        </Style>
        <Style x:Key="RightVirtualPadStyle" TargetType="controls:VirtualPad">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="UpButtonInputType" Value="DeviceIdJoypadX"/>
            <Setter Property="DownButtonInputType" Value="DeviceIdJoypadB"/>
            <Setter Property="LeftButtonInputType" Value="DeviceIdJoypadY"/>
            <Setter Property="RightButtonInputType" Value="DeviceIdJoypadA"/>
            <Setter Property="CenterButtonInputType" Value="DeviceIdJoypadStart"/>
        </Style>
    </views:MvxWindowsPage.Resources>
        
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <interactivity:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="PointerMoved">
                <core:InvokeCommandAction Command="{x:Bind VM.PointerMovedCommand}"/>
            </core:EventTriggerBehavior>
        </interactivity:Interaction.Behaviors>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <canvas:CanvasAnimatedControl x:Name="PlayerPanel" Grid.Row="0" Grid.Column="1">
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="DoubleTapped">
                    <core:InvokeCommandAction Command="{x:Bind VM.ToggleFullScreenCommand}"/>
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="Tapped">
                    <core:InvokeCommandAction Command="{x:Bind VM.TappedCommand}"/>
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
        </canvas:CanvasAnimatedControl>
        <controls:PlayerOverlay ViewModel="{x:Bind VM}" VerticalAlignment="Bottom" Grid.Row="0" Grid.Column="1"
                                Visibility="{x:Bind VM.DisplayPlayerUI, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
        <controls:VirtualPad x:Name="LeftVirtualPad" Style="{StaticResource LeftVirtualPadStyle}" ViewModel="{x:Bind VM}" Visibility="{x:Bind VM.ShouldDisplayTouchGamepad, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" Grid.Row="0" Grid.Column="0"/>
        <controls:VirtualPad x:Name="RightVirtualPad" Style="{StaticResource RightVirtualPadStyle}" ViewModel="{x:Bind VM}" Visibility="{x:Bind VM.ShouldDisplayTouchGamepad, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" Grid.Row="0" Grid.Column="2"/>
        
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.Setters>
                        <Setter Target="LeftVirtualPad.(Grid.Row)" Value="0"/>
                        <Setter Target="LeftVirtualPad.(Grid.Column)" Value="0"/>
                        <Setter Target="RightVirtualPad.(Grid.Row)" Value="0"/>
                        <Setter Target="RightVirtualPad.(Grid.Column)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:OrientationStateTrigger Orientation="Portrait"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LeftVirtualPad.(Grid.Row)" Value="1"/>
                        <Setter Target="LeftVirtualPad.(Grid.Column)" Value="1"/>
                        <Setter Target="RightVirtualPad.(Grid.Row)" Value="1"/>
                        <Setter Target="RightVirtualPad.(Grid.Column)" Value="1"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</views:MvxWindowsPage>
